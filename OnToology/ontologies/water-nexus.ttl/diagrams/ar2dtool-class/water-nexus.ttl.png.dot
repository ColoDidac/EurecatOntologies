digraph ar2dtool_diagram { 
rankdir=LR;
size="1501"
node [shape = rectangle, color="orange"]; "s4n:Animal" "saref:FeatureOfInterest" "s4n:PolicyGoal" "s4n:PolicyObjective" "s4n:NexusComponent" "s4n:FoodProperty" "s4n:Asset" "s4watr:WaterProperty" "s4n:ClimateProperty" "s4n:Role" "geosp:Geometry" "s4n:LearningGoal" "s4n:Energy" "saref:Measurement" "s4n:LandUseProperty" "s4watr:Water" "saref:Property" "geosp:SpatialObject" "s4n:CaseStudy" "s4n:Policy" "s4n:Plant" "s4n:EnergyProperty" "s4n:Region" "s4city:KeyPerformanceIndicator" "saref:UnitOfMeasure" ; /*classes style*/
	"NULL" -> "saref:Property" [ label = "owl:onClass" ];
	"NULL" -> "s4watr:isDesignedFor" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasTimestamp" [ label = "owl:onProperty" ];
	"NULL" -> "time:TemporalEntity" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:quantifiesKPI" [ label = "owl:onProperty" ];
	"NULL" -> "s4n:Plant" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4n:Energy" [ label = "owl:someValuesFrom" ];
	"NULL" -> "saref:hasProperty" [ label = "owl:onProperty" ];
	"NULL" -> "s4city:hasLastUpdateDate" [ label = "owl:onProperty" ];
	"NULL" -> "s4n:Region" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:isAssessedBy" [ label = "owl:onProperty" ];
	"NULL" -> "s4n:Animal" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:relatesToMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:float" [ label = "owl:onDataRange" ];
	"NULL" -> "s4n:ClimateProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:hasCreationDate" [ label = "owl:onProperty" ];
	"NULL" -> "s4watr:WaterProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:refersToTime" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Measurement" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4n:PolicyObjective" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:KeyPerformanceIndicator" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:isKPIOf" [ label = "owl:onProperty" ];
	"NULL" -> "geosp:sfContains" [ label = "owl:onProperty" ];
	"NULL" -> "saref:Property" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:UnitOfMeasure" [ label = "owl:onClass" ];
	"NULL" -> "saref:hasValue" [ label = "owl:onProperty" ];
	"NULL" -> "geosp:sfWithin" [ label = "owl:onProperty" ];
	"NULL" -> "saref:UnitOfMeasure" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:isMeasuredIn" [ label = "owl:onProperty" ];
	"NULL" -> "geosp:SpatialObject" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4n:EnergyProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:hasExpirationDate" [ label = "owl:onProperty" ];
	"NULL" -> "saref:hasMeasurement" [ label = "owl:onProperty" ];
	"NULL" -> "geosp:Geometry" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4n:threshold" [ label = "owl:onProperty" ];
	"NULL" -> "s4city:assesses" [ label = "owl:onProperty" ];
	"NULL" -> "xsd:dateTime" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4n:FoodProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4n:regions" [ label = "owl:onProperty" ];
	"NULL" -> "s4watr:Water" [ label = "owl:someValuesFrom" ];
	"NULL" -> "geosp:hasGeometry" [ label = "owl:onProperty" ];
	"NULL" -> "s4n:weights" [ label = "owl:onProperty" ];
	"NULL" -> "saref:relatesToProperty" [ label = "owl:onProperty" ];
	"NULL" -> "s4city:isDerivedFrom" [ label = "owl:onProperty" ];
	"NULL" -> "s4n:LandUseProperty" [ label = "owl:allValuesFrom" ];
	"NULL" -> "s4city:Agent" [ label = "owl:allValuesFrom" ];
	"NULL" -> "saref:FeatureOfInterest" [ label = "owl:allValuesFrom" ];
	"s4city:KeyPerformanceIndicator" -> "http://fiware-datamodels.readthedocs.io/latest/KeyPerformanceIndicator/doc/spec/index.html" [ label = "rdfs:seeAlso" ];
	"s4n:" -> "https://www.eurecat.org/" [ label = "dc:publisher" ];
	"s4n:" -> "https://seriousgame.sim4nexus.eu/ontology" [ label = "dcterms:source" ];
	"s4n:" -> "https://opensource.org/licenses/MIT" [ label = "dcterms:license" ];
	"s4n:affectedBy" -> "s4watr:intendedFor" [ label = "owl:sameAs" ];
	"owl:Thing" -> "xsd:string" [ label = "s4n:name" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:permanent" ];
	"owl:Thing" -> "geosp:gmlLiteral" [ label = "geosp:asGML" ];
	"owl:Thing" -> "s4n:LearningGoal" [ label = "s4n:hasLearningGoal" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:cost_qualitative" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:cost_generated_value" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:appliedTimes" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:cost_generated_qualitative" ];
	"s4n:PolicyGoal" -> "s4n:PolicyObjective" [ label = "s4n:threshold" ];
	"s4n:Policy" -> "saref:Measurement" [ label = "saref:actuationOver" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:cost_value" ];
	"s4n:Policy" -> "s4n:PolicyObjective" [ label = "saref:contributeTo" ];
	"s4n:PolicyGoal" -> "s4n:PolicyObjective" [ label = "s4n:weights" ];
	"geosp:Geometry" -> "geosp:gmlLiteral" [ label = "geosp:gmlLiteral" ];
	"geosp:Geometry" -> "geosp:wktLiteral" [ label = "geosp:wktLiteral" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:social_cost_qualitative" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:pre_init_10_to_15" ];
	"owl:Thing" -> "s4n:PolicyGoal" [ label = "s4n:hasPolicyGoal" ];
	"owl:Thing" -> "geosp:wktLiteral" [ label = "geosp:asWKT" ];
	"owl:Thing" -> "xsd:string" [ label = "s4n:comment" ];
	"s4n:NexusComponent" -> "s4n:NexusComponent" [ label = "s4n:affectOther" ];
	"owl:Thing" -> "s4n:CaseStudy" [ label = "s4n:studyCase" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:activeTime" ];
	"owl:Thing" -> "s4n:Asset" [ label = "s4n:hasAsset" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:buildingTime" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:effectiveness" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:level" ];
	"owl:Thing" -> "xsd:string" [ label = "s4n:description" ];
	"owl:Thing" -> "xsd:string" [ label = "s4n:shortName" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:pre_init_15_to_20" ];
	"s4n:Policy" -> "owl:Thing" [ label = "s4n:included_in_thematic_model" ];
	"s4n:CaseStudy" -> "s4n:Region" [ label = "s4n:regions" ];
	"owl:Thing" -> "s4n:Role" [ label = "s4n:hasRole" ];

}
